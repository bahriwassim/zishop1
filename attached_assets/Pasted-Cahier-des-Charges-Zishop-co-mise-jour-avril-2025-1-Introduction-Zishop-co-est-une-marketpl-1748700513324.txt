Cahier des Charges ‚Äì Zishop.co (mise √† jour avril 2025)
1. Introduction
Zishop.co est une marketplace mobile d√©di√©e aux clients s√©journant √† l‚Äôh√¥tel, leur permettant de commander des produits aupr√®s de commer√ßants locaux et de se faire livrer directement √† la r√©ception de leur √©tablissement. Le projet repose initialement sur le CMS eMart (multi-vendeurs) avec des personnalisations sp√©cifiques au mod√®le h√¥telier. Un partenariat avec Yper a √©t√© valid√© pour assurer les livraisons √† partir de la V2.

2. Objectifs G√©n√©raux
Cr√©er une application mobile connect√©e √† une marketplace propre √† chaque h√¥tel (via QR code ou code h√¥tel).


Permettre aux clients de d√©couvrir les produits de commer√ßants dans un rayon d√©fini (3 km autour de l‚Äôh√¥tel, modifiable).


Assurer la livraison √† l‚Äôh√¥tel via Yper, avec suivi dans l‚Äôinterface h√¥tel (√† partir de la V2).


Impl√©menter une logique de commission : 75 % commer√ßant, 25 % Zishop (incluant 5 % revers√©s √† l‚Äôh√¥tel).


Centraliser les paiements via Zishop avec redistribution automatis√©e.


Int√©grer un syst√®me de QR code par h√¥tel pour synchroniser automatiquement le client avec la bonne marketplace.



3. Fonctionnalit√©s Requises
3.1. Connexion Client / QR Code H√¥tel
√Ä l‚Äôouverture de l‚Äôapplication, le client scanne un QR code propre √† l‚Äôh√¥tel.


En cas de probl√®me technique (appareil photo), il peut saisir manuellement le code h√¥tel.


Une fois identifi√©, il acc√®de √† la marketplace de l‚Äôh√¥tel correspondant.


Affichage g√©olocalis√© des commer√ßants dans un rayon de 3 km autour de l‚Äô√©tablissement (param√©trable).


3.2. Interface H√¥tel
Suivi des commandes et des livraisons (√† partir de la V2).


Validation de la bonne r√©ception par le client √† la r√©ception de l‚Äôh√¥tel.


Visualisation des revenus g√©n√©r√©s (dashboard en temps r√©el).


Attribution automatique d‚Äôun code h√¥tel (ex. ZI75015) + QR code g√©n√©r√© dynamiquement.


3.3. Interface Client
Navigation dans la marketplace locale apr√®s connexion via QR code.


Ajout au panier et paiement en ligne via Stripe.


Livraison √† l‚Äôaccueil de l‚Äôh√¥tel (sans gestion de cr√©neaux horaires).


Possibilit√© de noter la commande (option V2).


3.4. Interface Commer√ßant
Gestion simple des produits, descriptions, prix.


R√©ception des commandes avec indication du statut livraison.


Acc√®s aux revenus g√©n√©r√©s et √† l‚Äôhistorique.


3.5. Interface Admin Zishop
Vue globale sur toutes les commandes, commer√ßants, h√¥tels.


Suivi des paiements et commissions.


G√©n√©ration des QR codes h√¥tel.


Supervision des anomalies.



4. Logistique & Livraison (via Yper)
V1 (MVP)
Livraison manuelle : les commer√ßants d√©posent les commandes ou une livraison est organis√©e hors API.


Statuts limit√©s : ‚ÄúCommande envoy√©e‚Äù, ‚ÄúEn cours de livraison‚Äù, ‚ÄúLivr√©e √† la r√©ception‚Äù.


V2 (Ann√©e 1)
Int√©gration API avec Yper :


Envoi automatique de la demande de livraison depuis l‚Äôapp


Suivi en temps r√©el pour h√¥tel et client


Confirmation de r√©ception avec signature ou bouton ‚Äúre√ßu‚Äù



5. Paiement & R√©partition
Paiement centralis√© via Zishop
Utilisation de Stripe (split √† confirmer)


Paiement du client √† Zishop ‚Üí redistribution mensuelle ou automatique :


75 % pour le commer√ßant


20 % pour Zishop


5 % pour l‚Äôh√¥tel affili√©


Gestion des reversements assur√©e depuis l‚Äôespace admin



6. Fonctionnalit√©s Exclues du MVP (report√©es √† V2+)
Fonction white label pour groupes h√¥teliers (non incluse dans eMart V1)


Publicit√©/boost visibilit√© commer√ßants


Paiement par points fid√©lit√© ou abonnements


Chat avec commer√ßants / notifications avanc√©es


Suivi pr√©cis des livreurs (hors Yper)



7. Infrastructure et S√©curit√©
D√©ploiement initial sur serveur partag√© (type Namecheap)


Migration envisag√©e sur serveur VPS ou scalable (AWS) selon traction


Certificat SSL + conformit√© RGPD


Chiffrement des donn√©es et transactions (via Stripe)



8. Roadmap Technique
Phase 1 : Pr√©paration MVP
Installation eMart, personnalisation du parcours QR code


Configuration Stripe, dashboard h√¥tels et commer√ßants


Tests sur 3 h√¥tels pilotes


Phase 2 : Int√©gration V2
API Yper (livraison automatique)


Tracking livraison, r√©ception valid√©e


Optimisation performance + UI



9. Livrables attendus
Application mobile (iOS + Android)


Plateforme marketplace multi-commer√ßants connect√©e aux h√¥tels


G√©n√©ration QR code h√¥tel


Interfaces commer√ßants, h√¥tels, admin


Documentation API pour int√©gration Yper


10. Contraintes & D√©lais
Dur√©e du MVP : 1 mois (hors retards li√©s √† Stripe)


Budget pr√©visionnel :


Regular License eMart (44$)


Personnalisation : ~1500‚Ç¨


H√©bergement : 10‚Äì30‚Ç¨/mois


Respect des normes RGPD et s√©curit√© des paiements



11. Strat√©gie de D√©veloppement & Licensing
Phase 1 : Regular License (44$) ‚Üí pour d√©veloppement & tests internes


Phase 2 : Extended License (399$) ‚Üí achat apr√®s validation avec les h√¥tels pilotes



12. Conclusion
Zishop.co vise √† cr√©er une marketplace mobile rapide, simple et fiable pour rapprocher les commer√ßants locaux des voyageurs s√©journant √† l‚Äôh√¥tel. Le projet sera lanc√© en version test sur un p√©rim√®tre restreint avant un d√©ploiement √©largi. L‚Äôint√©gration progressive de fonctionnalit√©s avanc√©es (livraison, marque blanche, publicit√©) permettra de faire √©voluer le mod√®le sans alourdir le MVP.







üöÄ D√©tail par Sprint
üîß Sprint 1 (Semaine 1)
Infrastructure & CI/CD
Cr√©er un monorepo 
Initialiser NestJS + React Native + React.js + React.js (admin)
D√©ployer en staging sur VPS 


g√©neration automatique d‚Äôarchitacture de projet via AI 
üîê Sprint 2 (Semaine 2)
Auth & Mod√®le DB
Impl√©menter JWT + refresh token via Passport.js


Cr√©er entit√©s TypeORM : User, Hotel, Merchant, Product, Order, Role


G√©n√©rer migrations, seed data pour test
site vitrine 
d√©veloppement d‚Äôun site vitrine c√¥t√© hotel
üì¶ Sprint 3 (Semaine 3)
API H√¥tels & QR Codes
Endpoint  h√¥tels + g√©n√©ration code & QR 
Endpoint g√©olocalisation : rechercher commer√ßants dans un rayon configurable


Documenter les routes avec Swagger (NestJS)


Tests API pour ces endpoints
site vitrine 
d√©veloppement d‚Äôun site vitrine c√¥t√© client 

üì± Sprint 4 (Semaine 4)
Mobile MVP ‚Äì Connexion & Listing
√âcran d‚Äôaccueil React Native : scan QR + saisie manuelle


Navigation vers liste commer√ßants (FlatList)


Int√©grer API g√©oloc + afficher distance


Gestion des √©tats de chargement et erreurs
site vitrine 
d√©veloppement d‚Äôun site vitrine c√¥t√© commercant 
üí≥ Sprint 5 (Semaine 5)
Panier & Paiement
Backend : int√©grer Stripe Connect (account link, webhook pour paiement)


Endpoints panier CRUD, cr√©ation session Stripe, capture du paiement


Mobile : UI panier (ajout/suppression), √©cran paiement via WebView ou SDK natif


Tests de bout en bout du flow paiement

site vitrine 
test final des 3 site 
üõçÔ∏è Sprint 6 (Semaine 6)
Dashboards Web Commer√ßant & H√¥tel
Front React.js (Tailwind + ShadCN) : login + dashboard minimal


Commer√ßant : CRUD produits, liste commandes, revenus


H√¥tel : liste commandes, statuts, aper√ßu revenus


Consommation des APIs existantes, gestion des tokens


üì¨ Sprint 7 (Semaine 7)
Livraison Manuel & Notifications
Impl√©menter statuts manuels (‚Äúenvoy√©e/ en livraison/ re√ßue‚Äù)


Int√©grer Firebase Cloud Messaging (FCM) c√¥t√© backend + mobile


Gateway NestJS WebSocket pour mettre √† jour dashboards en temps r√©el


Bouton ‚ÄúCommande re√ßue‚Äù c√¥t√© mobile & Web




üìã Livrables & Crit√®res d‚Äôacceptation
Repo Monorepo avec code backend + front (mobile & web)


Documentation API (Swagger) et guide d‚Äôinstallation


Builds automatis√©s via CI/CD + d√©ploiement staging


MVP Mobile fonctionnel : scan QR ‚Üí commande ‚Üí paiement ‚Üí statut


Interfaces Web Commer√ßant/H√¥tel basiques mais utilisables


Livraison V1 et notifications op√©rationnelles


Tests unitaires (‚â• 80 % couverture) et tests E2E r√©ussis




